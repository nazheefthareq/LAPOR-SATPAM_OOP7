/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package LaporSatpam;

import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import javax.imageio.ImageIO;
import java.awt.*;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import java.awt.event.ActionEvent;
import net.sourceforge.tess4j.ITesseract;
import net.sourceforge.tess4j.Tesseract;
import net.sourceforge.tess4j.TesseractException;

/**
 *
 * @author LENOVO
 */
public class FotoKTP extends javax.swing.JFrame {
    private Webcam webcam;
    private WebcamPanel webcamPanel;

    /**
     * Creates new form FotoKTP
     */
    public FotoKTP() {
        initComponents();
        initWebcam();
    }
    
    private void initWebcam() {
        webcam = Webcam.getDefault();
        if (webcam == null) {
            JOptionPane.showMessageDialog(this, "Webcam tidak ditemukan!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        webcam.setViewSize(new Dimension(640, 480));
        webcamPanel = new WebcamPanel(webcam);
        webcamPanel.setMirrored(true);

        WebcamContain.setLayout(new BorderLayout());
        WebcamContain.add(webcamPanel, BorderLayout.CENTER);
        WebcamContain.revalidate();
        WebcamContain.repaint();
        
        Capture.addActionListener(e -> {
            captureButtonActionPerformed(null);
        });

    }
    
    private void captureButtonActionPerformed(ActionEvent e) {
    try {
            var image = webcam.getImage();
            if (webcam.isOpen()) webcam.close();
            // Save the captured image
            File folder = new File("Foto_KTP_Tamu");
            if (!folder.exists()) folder.mkdir();
            String timestamp = new SimpleDateFormat("yyyyMMdd").format(new Date());
            String filename = String.format("Foto_KTP_Tamu/_%s.jpg", timestamp);
            ImageIO.write(image, "JPG", new File(filename));
            JOptionPane.showMessageDialog(null, "Foto berhasil disimpan di:\n" + filename);
            // Perform OCR on the saved image
            ITesseract tesseract = new Tesseract();
            tesseract.setDatapath("C:\\Users\\PC WILDAN\\OneDrive\\Dokumen\\NetBeansProjects\\LAPOR-SATPAM_OOP7\\Tess4J\\tessdata"); // Set the path to your tessdata folder
            tesseract.setLanguage("ind"); // Use "ind" for Indonesian language
            PreviewFoto preview = new PreviewFoto(image,() -> {
            // Save image logic here
            }, tesseract);
            
            preview.setVisible(true);
            this.dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Gagal menangkap gambar: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
}




    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Background = new javax.swing.JPanel();
        WebcamContain = new javax.swing.JPanel();
        Capture = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Background.setBackground(new java.awt.Color(98, 150, 232));

        javax.swing.GroupLayout WebcamContainLayout = new javax.swing.GroupLayout(WebcamContain);
        WebcamContain.setLayout(WebcamContainLayout);
        WebcamContainLayout.setHorizontalGroup(
            WebcamContainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 681, Short.MAX_VALUE)
        );
        WebcamContainLayout.setVerticalGroup(
            WebcamContainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 469, Short.MAX_VALUE)
        );

        Capture.setText("Ambil Gambar");

        javax.swing.GroupLayout BackgroundLayout = new javax.swing.GroupLayout(Background);
        Background.setLayout(BackgroundLayout);
        BackgroundLayout.setHorizontalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(WebcamContain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addGap(271, 271, 271)
                .addComponent(Capture, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        BackgroundLayout.setVerticalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(WebcamContain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Capture, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FotoKTP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FotoKTP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FotoKTP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FotoKTP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FotoKTP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Background;
    private javax.swing.JButton Capture;
    private javax.swing.JPanel WebcamContain;
    // End of variables declaration//GEN-END:variables
}
